name: Build and Publish

on:
  push:
    branches: ["master"]

permissions:
  contents: write

env:
  EM_VERSION: 3.1.34

jobs:
  build-android:
    name: Android
    concurrency: ci-android-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Build
        run: |
          cd build/android
          chmod +x gradlew
          ./gradlew assembleRelease --stacktrace

      - name: Bundle
        run: |
          cd build/android/app/build/outputs/apk/release
          mv app-release.apk Cubic.apk
          zip cubic.zip Cubic.apk

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/android/app/build/outputs/apk/release/cubic.zip
          asset_name: Cubic_Android.zip
          tag: Build
          overwrite: true

  build-windows:
    name: Windows
    concurrency: ci-windows-${{ github.ref }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add MSBUILD to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build (x64)
        run: msbuild build\windows\Cubic.vcxproj -t:rebuild -property:Configuration=Release -property:Platform=x64

      - name: Build (ARM64)
        run: msbuild build\windows\Cubic.vcxproj -t:rebuild -property:Configuration=Release -property:Platform=ARM64

      - name: Bundle (x64)
        run: |
          cd build\windows\x64\Release
          tar.exe -a -c -f cubic.zip Cubic.exe

      - name: Bundle (ARM64)
        run: |
          cd build\windows\ARM64\Release
          tar.exe -a -c -f cubic.zip Cubic.exe

      - name: Publish (x64)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/windows/x64/Release/cubic.zip
          asset_name: Cubic_Windows_x64.zip
          tag: Build
          overwrite: true

      - name: Publish (ARM64)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/windows/ARM64/Release/cubic.zip
          asset_name: Cubic_Windows_ARM64.zip
          tag: Build
          overwrite: true

  build-linux:
    name: Linux
    concurrency: ci-linux-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install clang libgl-dev libglew-dev libsdl2-dev

      - name: Build
        run: |
          cd build/linux
          make -j

      - name: Bundle
        run: |
          cd build/linux/output
          zip cubic.zip cubic

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/linux/output/cubic.zip
          asset_name: Cubic_Linux.zip
          tag: Build
          overwrite: true

  build-macos:
    name: MacOS
    concurrency: ci-macos-${{ github.ref }}
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: |
          cd build/macos
          make -j

      - name: Bundle
        run: |
          cd build/macos/output
          tar -a -c -f cubic.zip Cubic.app

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/macos/output/cubic.zip
          asset_name: Cubic_MacOS.zip
          tag: Build
          overwrite: true

  build-web:
    name: Web
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Emsdk
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}

      - name: Build
        run: |
          cd build/web
          make -j

      - name: Publish
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/web/output
